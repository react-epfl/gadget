<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Apps grid view"
                author_email="jad.naoum@gmail.com"
                author="Evgeny Bogdanov, Jad Naoum"
                description="This functional skin takes all apps from a space and shows them in a grid layout where the number of columns can be changed. At the moment, it works only in Graasp - http://graasp.epfl.ch">
    <Require feature="dynamic-height" />
    <Require feature="shindig-container" />
  </ModulePrefs>
  <Content type="html" view="default,canvas,home,profile"><![CDATA[

<style type="text/css">
.sprite{
  background: url("http://localhost/gadgets/test/grid_view/sprite.png") no-repeat top left;
  display: inline-block;
}
.select{ background-position: 0 0; width: 32px; height: 32px; } 
.view1{ background-position: -82px 0; width: 27px; height: 20px; } 
.view2{ background-position: -159px 0; width: 27px; height: 20px; } 
.view3{ background-position: -236px 0; width: 27px; height: 20px; } 
.view4{ background-position: -313px 0; width: 27px; height: 20px; } 
.view5{ background-position: -390px 0; width: 27px; height: 20px; } 
.view6{ background-position: -467px 0; width: 27px; height: 20px; } 

  .gadgets-gadget{width: 100%;}
  body{
    background-color:transparent;
    font-family: "Helvetica Neue", arial, sans-serif;
    font-size: 13px;
  }

  .gadget{
    margin: 10px;
    border: 1px solid #87AFDA;
    border-radius: 5px;
    color: #36C;
    clear: both;
  }

  .gadgets-gadget-title-bar{
    padding:5px;
    border-bottom: 1px solid #87AFDA;
    background-color: #D4E6FC;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
  }

  .gadgets-gadget-content{
    padding:5px;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
  }

  #container {
    width:100%;
    height:100%;
    background-color:white;
    border-radius:5px;
  }

  .select_pic{
    position: absolute;
    top: 50%;
    left: 50%;
    cursor: pointer;
    margin-top: -16px;
    margin-left: -16px;
  }

  .window{
    height: 100px;
    border: 1px solid #87AFDA;
    border-radius: 5px;
    margin: 10px;
    text-align: center;
    position: relative;
  }
  .center_window{
    width: 97%;
  }

  .left_window{
    width: 95%;
    float: left;
  }

  .right_window{
    width: 95%;
    float: right;
  }

  .leftmost_window, .middlemost_window, .rightmost_window{
    width: 93%;
    float: left;
  }

  #widget_list{
    width: 200px;
    background-color: #eeeeee;
    border: 1px solid #9e9e9e;
    overflow: auto;
    border-radius: 5px;
    box-shadow: 1px 1px 1px #aaa;
    -webkit-box-shadow: 1px 1px 1px #aaa;
    background: -moz-linear-gradient(top, #eeeeee, white);
    background: -webkit-gradient(linear, left top, left bottom, from(#eeeeee), to(white));

    z-index: 1;
    position: absolute;
    top: 50%;
    left: 50%;
    list-style-type: none;
    text-align:left;
    padding:0px;
    margin-left:16px;
    margin-top:16px;
  }

  li{
    overflow: hidden;
    height: 20px;
    line-height: 20px;

    cursor: pointer;
    padding: 2px;
    border-bottom: 1px solid #CCCCCC;
    text-indent: 5px;
    font-size: 12px;
    padding-right: 5px;
  }

  li span {
    width:800px;
  }

  li:hover{
    background-color: #ccc;
    color: white;
  }
  li.last{
    border-bottom:none;
  }

  .button{
    margin-left: 40px;
    -webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;
    background-color: #7cceee;
    border-radius: 5px;
    border-bottom-color: #333;
    border: 1px solid #61c4ea;
    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;
    color: #333;
    font-size: 11px;
    text-shadow: #b2e2f5 0px 1px 0px;
    padding: 3px;
    cursor: pointer;
  }

  .view_pic{
    position: relative;
    top: 5px;
  }

  label{
    position: relative;
    top: 10px;
  }
</style>

  <div id="container" onmouseover="adjustHeight();">
    <div id="title" style="font-size:16px;text-indent:10px;padding-top:5px;padding-bottom:5px">Apps in the space</div>
    <input type="button" class = "button" id="reset_button" value="Rearrange Apps"></input>
    <div id= "center" style = "width: 100%; position: relative; top:0px;"></div>
    <div id="left" style="width: 50%; position: relative; float: left; top: 0px;"></div>
    <div id="right" style="width: 50%; position: relative; float: left; top: 0px;"></div>
    <div id="leftmost" style="width: 33%; position: relative; float: left; top: 0px;"></div>
    <div id="middlemost" style="width: 33%; position: relative; float: left; top: 0px;"></div>
    <div id="rightmost" style="width: 33%; position: relative; float: left; top: 0px;"></div>
  </div>

  <script type="text/javascript" src="http://localhost/gadgets/libs/jquery.min.js"></script>

<script type="text/javascript">
var buildRadio = function (i) {
  var btn = $("<span></span>")
      .append($('<input type="radio"></input').addClass("views").attr("id","view"+i).attr("name","views"))
      .append($("<span></span").addClass("view_pic sprite view"+i))
  $('#title').after(btn)
}
for (var i = 6; i >= 1; i--) {
  buildRadio(i)
}
var isOwner = false;
var my = {};
var app = { context: "", viewerName: ""
          , data: {my_gadgets_final: [], my_gadgets_temp: [], view: ""}
          , root_url: "http://localhost/gadgets/test/grid_view/"
          }

// gets the data and calls build for container
var initialize = function() {

  // This container lays out and renders gadgets itself.

  my.LayoutManager = function() {
    shindig.LayoutManager.call(this);
  };

  my.LayoutManager.inherits(shindig.LayoutManager);

  my.LayoutManager.prototype.getGadgetChrome = function(gadget) {
    var chromeId = 'gadget-chrome-' + gadget.id;
    return chromeId ? document.getElementById(chromeId) : null;
  };

  shindig.container.layoutManager = new my.LayoutManager();

  //getting the user's settings
  var batch = osapi.newBatch();
  batch.add('viewer', osapi.people.getViewer());
  batch.add('context', osapi.context.get());
  batch.execute(function(data){
    var viewer = data.viewer
    app.viewer = viewer;
    app.viewerName = viewer.displayName;

    var context = data.context
    app.context = context
    var contextId = context.contextId
    var contextType = context.contextType
    var prefix = (contextType === "@space") ? "s_" : "";
    app.contextId = prefix + contextId;

    var batch = osapi.newBatch();
    batch.add('appdata', osapi.appdata.get({userId: app.contextId}));
    batch.add('apps', osapi.apps.get({contextId: contextId, contextType: contextType}));
    batch.execute(function(res){
      // --- apps from space ---
      var apps = res.apps
      var gadgets_list = apps.list
      // -----------------------
      var data = res.appdata[app.contextId];
      if (data){
        app.data = JSON.parse(data["settings"]);

        // no settings saved yet, then build default arrangement of apps
        if (app.data.my_gadgets_final.length == 0) {
          app.data.my_gadgets_temp = createMyGadgetsTemp(gadgets_list);
          app.data.my_gadgets_final = createMyGadgetsTemp(gadgets_list);
        }

        //setting the initial view based on app
        if(app.data.view == "" || app.data.view == null){
          app.data.view = "view1";
          $("#view1").attr('checked', 'checked');
        } else {
          $("#"+app.data.view).attr('checked', 'checked');
        }
      } else {
        app.data = {}
        app.data.my_gadgets_temp = createMyGadgetsTemp(gadgets_list)
        app.data.my_gadgets_final = createMyGadgetsTemp(gadgets_list)
        app.data.view = "view1";
      }

      buildSkeleton(gadgets_list);
      $('.views').change(function(){
        buildSkeleton(gadgets_list);
        save();
      });

      $("#reset_button").click(function(){
        app.data.my_gadgets_final = [];
        buildSkeleton(gadgets_list);
        save();
      })

      $(document).click(function(e){
         var elem = $(e.target).attr('id');
         if(elem !== 'widget_list' && $("#widget_list").length != 0){
             $('#widget_list').remove();
         }
      });


      // We set three timeouts to make sure the apps are loaded to do proper resizing
      // if it take long time, it will be resized when mouse is moved above the app
      // 3 seconds
      setTimeout(adjustHeight,3000);
      // 10 seconds
      setTimeout(adjustHeight,10000);
      // 60 seconds
      setTimeout(adjustHeight,60000);
    });
  });

};

var adjustHeight = function() {
  gadgets.window.adjustHeight();
}


var buildBlock = function (parent, index, className) {
  var blk = $("<div></div>").attr("id", "window" + index)
      .addClass("window " + className)
      .append($("<span></span>").addClass("select_pic sprite select"))
      .append($("<label></label>").text("Click to add an App"))
  parent.append(blk)
}
var buildSkeleton = function(my_gadgets_initial){
  var context = app.context
    , viewer = app.viewer
  //getting the view
  if($("#view1").is(':checked')){
    var center_number = my_gadgets_initial.length;
  } else if($("#view2").is(':checked')){
    var center_number = 2;
  } else if($("#view3").is(':checked') || $("#view4").is(':checked')){
    var center_number = 1;
  } else {
    var center_number = 0;
  }

  var left = $("#left");
  var right = $("#right");
  var center = $("#center");
  var leftmost = $("#leftmost");
  var middlemost = $("#middlemost");
  var rightmost = $("#rightmost");

  left.empty();
  right.empty();
  center.empty();
  leftmost.empty();
  middlemost.empty();
  rightmost.empty();

  if(my_gadgets_initial.length == 0){
    center.innerHTML = "No apps were found in this space!";
  }

  var temp = center_number
  for(var i =0; i < my_gadgets_initial.length; i++) {
    if(my_gadgets_initial[i].appType == "WidgetGadget"){
      if(center_number > 0){
        buildBlock(center, i, "center_window")
        center_number--;
      } else if($("#view2").is(':checked') || $("#view3").is(':checked')||$("#view5").is(':checked')){
        if((i+temp) % 2 == 0){
          buildBlock(left, i, "left_window")
        } else {
          buildBlock(right, i, "right_window")
        }
      } else {
        if((i+temp) % 3 == 0){
          buildBlock(leftmost, i, "leftmost_window")
        } else if((i+temp) % 3 == 1) {
          buildBlock(middlemost, i, "middlemost_window")
        } else {
          buildBlock(rightmost, i, "rightmost_window")
        }
      }
    }
  }

  for(var k=0; k<app.data.my_gadgets_final.length; k++){
    if(app.data.my_gadgets_final[k] != null){
      buildGadget(app.data.my_gadgets_final[k], "window"+k, my_gadgets_initial, context, viewer);
    }
  }

  //upon clicking on the select image
  $('.select_pic').click(function(event) {
    event.stopPropagation();
    // remove the currently open popup
    $("#widget_list").remove()

    var _this = $(this)
    var containing_window = _this.parent();
    var containing_section = _this.parent().parent();

    //building the list of gadgets for the user to choose from
    _this.parent().append("<ul id ='widget_list'></ul>");
    for(var i =0; i<app.data.my_gadgets_temp.length; i++){
      if(i == app.data.my_gadgets_temp.length -1) {
        $("#widget_list").append("<li class = 'list_e last'><span>"+app.data.my_gadgets_temp[i]+"</span></li>")
      } else {
        $("#widget_list").append("<li class = 'list_e'><span>"+app.data.my_gadgets_temp[i]+"</span></li>")
      }
    }

    //building the gagdet that the user picks from the list
    $('.list_e').click(function() {
      var _this = $(this);
      gadget_window_id = _this.parent().parent().attr('id');
      gadget_name = _this.text();
      buildGadget(gadget_name, gadget_window_id, my_gadgets_initial, context, viewer);
      removeFromTemp(gadget_name);
      save();
    });
  });


}

var buildGadget = function(gadget_name, gadget_window_id, my_gadgets_initial, context, viewer){
  var gadget_data
  //removing the select_pic and the popup list
  $("#"+gadget_window_id).empty();

  //have the gadget_window equal to the window that will contain the gadget
  var gadget_index = gadget_window_id.charAt(6);
  app.data.my_gadgets_final[gadget_index] = gadget_name;

  for(var j =0; j<my_gadgets_initial.length; j++){
    if(gadget_name == my_gadgets_initial[j].displayName){
      gadget_data = my_gadgets_initial[j];
      j = my_gadgets_initial.length;
    }
  }

  var context_id = context.contextId;
  if (context.contextType == "@space") {
    context_id = "s_"+context.contextId;
  }
  var viewer_id = viewer.id;
  // pass secure token taked from parent metawidget
  // TODO: get secure token for each widget from osapi.apps request
  var token = gadget_data.token
  var gadget = shindig.container.createGadget(
      {specUrl: gadget_data.appUrl, height: '400px', title: gadget_data.displayName,
        secureToken: token});

  shindig.container.addGadget(gadget);

  var gadget_el = document.createElement('div');
  gadget_el.id = 'gadget-chrome-'+(gadget.id);
  gadget_el.setAttribute('class','gadget');
  $("#"+gadget_window_id).after(gadget_el);
  $("#"+gadget_window_id).remove();

  shindig.container.setView("home");
  shindig.container.renderGadget(gadget);

  // resize the gadget
  adjustHeight();

}

//remove the widget from the list of possible widgets that the user can choose from
removeFromTemp = function(gadget_name){
  for(var n=0; n<app.data.my_gadgets_temp.length; n++){
    if(gadget_name == app.data.my_gadgets_temp[n]){
      app.data.my_gadgets_temp.splice(n,1);
      n = app.data.my_gadgets_temp.length + 1;
    }
  }
}

// creates a default list when no apps selected
// otherwise, take user's settings
var createMyGadgetsTemp = function(array){
  var a = [];
  for(var i=0; i<array.length; i++){
    if(array[i].appType == "WidgetGadget"){
      a.push(array[i].displayName);
    }
  }
  return a;
}

var save = function(){
  app.data.view = $("#container input[type='radio']:checked").attr('id');

  osapi.appdata.update({userId: app.contextId,
  data: {"settings": JSON.stringify(app.data)}}).execute(function() {});
}

</script>

<script type="text/javascript">
gadgets.util.registerOnLoadHandler(initialize);
</script>

  ]]></Content>
</Module>
