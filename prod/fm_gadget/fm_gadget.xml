<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="FlashMeeting app (OS appdata)" height="600" width="500" author="Knowledge Media Institute" author_affiliation="The Open University UK" screenshot="http://fm.ea-tel.eu/gadgets/fm_screenshot.png" thumbnail="http://fm.ea-tel.eu/gadgets/fm_thumbnail.png" description="FlashMeeting is a tool for simultaneous video/audio/text conferencing. It is based on OpenSocial AppData api and not user prefs.">
	  <Require feature="dynamic-height"/>
	  <Require feature="osapi" />
	</ModulePrefs>
	<UserPref name="fmurl" display_name="Meeting URL"/>
	<Content type="html">
	<![CDATA[ 
  <!-- <script src="http://code.jquery.com/jquery-1.4.3.min.js"></script> -->
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
	<style type = "text/css">
	  #settings, #hide{
	    margin-top: 5px;
	    margin-bottom: 5px;
	  }
	</style>
	
  <!-- // <script src="https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/open-app/openapp_postmessage.js"></script> -->
  <!-- // <script type="text/javascript" src="http://202.120.34.34/gadgets/init.js"></script> -->
	<button id = "settings" onclick = "showSettings();" style = "display:none">Settings</button>
  <button id = "hide" onclick = "hideSettings();" style = "display:none">Hide</button>
	<div id="management" style ="display:none">
    <label for="url" >Meeting URL:</label>
    <input id="url" type="text" />
    <button onclick="changeUrl();" >Update</button>
    <button onclick="removeUrl();" >Clear</button>
  </div>
  <div id="importedGadget"></div>
	
  <script type="text/javascript">
    $("#url").keypress(function(event) {if(event.keyCode == 13) {changeUrl();}})
  
    var getGadget = function(){
      // Get userprefs
      // var prefs = new gadgets.Prefs();
  
      // Get the meeting URL entered by the user 
      var fmurl = $("#url").val();
      var html = "";
  
      // If the user has not added a meeting URL, display the default index page
      if (fmurl.length == 0)
      {
        html = "<iframe src='http://fm.ea-tel.eu/gadgets/index.php' frameborder='0' scrolling='auto' width='100%' height='500'></iframe>";
      }
      else { // display the meeting page
        html = "<iframe src='http://fm.ea-tel.eu/gadgets/details.php?eventid=" + fmurl.substring(23) + "' frameborder='0' scrolling='auto' width='100%' height='500'></iframe>";
      }
      document.getElementById("importedGadget").innerHTML = html;
    }
    
    var changeUrl = function() {
      var url = $("#url").val();
      $('#iframe').attr('src',url);

      var prefix = (contextType === "@space") ? "s_" : "";
      var userId = prefix + contextId;
      osapi.appdata.update({userId: userId, data: {url: url}}).execute(function() {
      });
      getGadget();
    }
    var removeUrl = function() {
      $("#url").val("");

      var prefix = (contextType === "@space") ? "s_" : "";
      var userId = prefix + contextId;
      osapi.appdata["delete"]({userId: userId, keys: ['url']}).execute(function() {
      });
      getGadget();
    }
    var showSettings = function(){
      $("#settings").hide();
      $("#hide").show();
      $("#management").show();
    }
    var hideSettings = function(){
      $("#hide").hide();
      $("#settings").show();
      $("#management").hide();
    }
    // gets the data and calls build for container
    var initialize = function() {
      // batch: get viewer and context for gadget
      var batch = osapi.newBatch();
      batch.add('viewer', osapi.people.getViewer());
      if (osapi.context) { // only for spaces extended container
        batch.add('context', osapi.context.get());
      } else {
        batch.add('context', osapi.people.getOwner());    
      }
      batch.execute(function(data){
        var viewerId = data.viewer.id
          , context = data.context
          ;

        contextId = "@owner"
        contextType = "@user"
        if (osapi.context) { // only for spaces extended container
          contextId = data.context.contextId
          contextType = data.context.contextType      
        }
        var prefix = (contextType === "@space") ? "s_" : ""
          , userId = prefix + contextId
          ;

        // batch: get viewer
        var batch = osapi.newBatch();
        batch.add('owner', osapi.people.getOwner());
        batch.add('appdata', osapi.appdata.get({userId: userId}));
        batch.execute(function(data){

          var ownerId = data.owner.id;

          // current viewer is the owner, then show management block
          if (viewerId === ownerId) { 
            $('#settings').show();
          }

          // update iframe based on appdata
          var userAppdata = data.appdata[userId];
          if (userAppdata) {
             $("#url").val(userAppdata["url"]);
             getGadget();
          }
          else{
            getGadget();
          }
        });

      });

    };

    setTimeout(initialize,1000);
     
    </script>
    ]]> 
    </Content>
</Module>
