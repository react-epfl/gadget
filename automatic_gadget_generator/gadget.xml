<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Automatic UI Generator" author_email="hagop.jamkojian@epfl.ch" author="Hagop Jamkojian" height="600" width="800">
<Require feature="dynamic-height"/>
</ModulePrefs>
<Content type="html">
<![CDATA[
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Automatic Gadget Generator</title>
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>  

    <script type="text/javascript" src="https://code.jquery.com/jquery-1.7.2.js"></script>
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/headjs/1.0.3/head.min.js"></script>
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"></script>
    <script type="text/javascript" src="https://raw.githubusercontent.com/eligrey/FileSaver.js/master/FileSaver.min.js"></script>
    <style>
        body {
            background-color: #5050d2;
        }
        #mainDiv {
            font-size: 16px;
            line-height: 1.42857143;
            color: #ffffff;
            margin-top: 40px;
            font-family:arial,sans-serif;
            margin-bottom:20px;
            padding-left: 70px;
            padding-right: 50px;
            color: white;
            width: 800px ;
            height: 600px;
        }
        .btn {
            background-color: white;
            color: black;
        }
        input{
            color: black;
        }
    </style>
</head>
<body>
    <div id="mainDiv">
        IP Address: &nbsp; <input type="text" maxlength="15" size="15" id="ipAddress"/><br><p></p>
        Port Number: &nbsp; <input type="text" maxlength="5" size="5" id="port"/><p></p><br>
        <button class="btn" background-color="white" id="configurator">Get Configurations</button>
        <p></p><br/>
        <div id="experimentsDiv"></div><br>
        <button class="btn" background-color="white" id="generator">Generate Gadget</button>
        <script>
            $('#generator').hide();
        </script>
    </div>

    
    <script>
        head.ready(function () {
            gadgets.window.adjustHeight(); 
            var ip;
            var port;
            var ws;
            var body = '<body>\n';
            var actuators = '';
            var onOpen = 'ws.onopen = function() { \n connected = 1; \n';
            var booleanArray = 'var booleanArray = [ ';
            var scriptHeader = '';
            var oneOptionOnlyFlag = 1;
            var allSensorsActuators = [];
            var experiments = [];
            var checkboxes = [];
            var configurationArray = 'var configurationArray = [];\n';
            var slidersArray = 'var slidersArray = [ ';
            var initialOption;
            $('#configurator').click(function() {
                ip = $('#ipAddress').val();
                port = $('#port').val();
                ws = new WebSocket('ws://' + ip + ':' + port);
                experiments = [];
                checkboxes = [];
                var node = document.getElementById("experimentsDiv");
                while (node.hasChildNodes()) {
                    node.removeChild(node.lastChild);
                }
                ws.onopen = function() {
                    ws.send(JSON.stringify({ method: 'getExperiments'}));
                };

                ws.onmessage = function(event) {
                    var data = event.data;
                    var msg;
                    try {
                        msg = JSON.parse(data);
                        if (msg.method == "getSensorMetadata") {
                            $.each(msg.sensors, function(index,sensor){
                                if (allSensorsActuators.indexOf(sensor.sensorId)>(-1)){
                                    if(sensor.values[0].type == 'boolean'){
                                        booleanArray+= '\''+ sensor.sensorId +'\',';
                                        body+= '<span id="span' + sensor.sensorId + '"><p></p>' + sensor.fullName+ '<br></span>\n<div id="'+ sensor.sensorId +'" class="led-green-off"></div>\n';
                                    } else 
                                        if (sensor.values[0].type == 'string') {
                                            body+= '<span id="span'+sensor.sensorId+'"><p></p>'+sensor.fullName+ ': </span><span id="'+ sensor.sensorId +'">0</span>\n';
                                        }

                                    onOpen+= 'sensorRequest = {\n'+
                                        'method: \'getSensorData\',\n'+
                                        'sensorId: \''+ sensor.sensorId +'\',\n'+
                                        'accessRole: \'controller\'\n'+
                                        '}\n'+
                                        'jsonRequest = JSON.stringify(sensorRequest);\n'+
                                        'ws.send(jsonRequest);\n';
                                }
                            });

                            body+= '<p></p>\n';
                            onOpen+= '};\n';
                            booleanArray = booleanArray.substring(0, booleanArray.length - 1);
                            booleanArray+= '];\n';
                            createGadget();

                        } else {
                            if (msg.method == "getActuatorMetadata") {
                                $.each(msg.actuators, function(index, actuator){
                                    if (allSensorsActuators.indexOf(actuator.actuatorId)>(-1))
                                        if (actuator.values[0].type=="boolean"){    
                                            body+= '<span id="span'+ actuator.actuatorId + '"><p></p>' + actuator.fullName + ': &nbsp;</span><button class="btn" background-color="white" id="' + actuator.actuatorId + '">Turn On</button>\n';
                                            
                                            actuators+= '$(\'#' + actuator.actuatorId + '\').click(function() {\n'+
                                                'var actuatorRequest = {\n'+
                                                'authToken: \'skfjs343kjKJ\',\n'+
                                                'method: \'sendActuatorData\',\n'+
                                                'accessRole: \'controller\',\n'+
                                                'actuatorId: \'' + actuator.actuatorId + '\',\n'+
                                                'valueNames: "",\n'+
                                                'data: \'0\'\n'+
                                                '};\n'+
                                                'var logObject = {\n'+
                                                '"objectType": "boolean",\n'+
                                                '"displayName":"'+ actuator.actuatorId +'",\n'+
                                                '}\n'+
                                                'if(!$(this).hasClass("button-on")){\n'+
                                                'actuatorRequest.data = \'1\';\n'+
                                                '$(this).html("Turn off");\n'+
                                                '$(this).addClass("button-on");\n'+
                                                'if (actionLoggerReady)\n'+
                                                'actionLogger.logStart(logObject);\n'+
                                                '} else {\n'+
                                                '$(this).html("Turn on");\n'+
                                                '$(this).removeClass("button-on");\n'+
                                                'if (actionLoggerReady)\n'+
                                                'actionLogger.logCancel(logObject);\n'+
                                                '}\n'+
                                                'var jsonRequest = JSON.stringify(actuatorRequest);\n'+
                                                'if(connected)\n'+
                                                'ws.send(jsonRequest);\n'+
                                                '});\n\n';
                                        } else 
                                            if (actuator.values[0].type=="float") {
                                                body+= '<div><p></p>'+actuator.fullName + ': &nbsp;&nbsp;<input id="' + actuator.actuatorId + '" type="text" data-slider-min="' + actuator.values[0].rangeMinimum + '" data-slider-max="' + actuator.values[0].rangeMaximum + '" data-slider-step="0.1" data-slider-value="0"/></div>\n';
                                                slidersArray += '"' + actuator.actuatorId + '",';
                                                actuators+= '$("#'+ actuator.actuatorId +'").slider();\n'+
                                                    '$("#'+ actuator.actuatorId +'").on("change", function(slideEvt) {\n'+
                                                    'var logObject = {\n'+
                                                    '"objectType": "slider",\n'+
                                                    '"displayName":"'+ actuator.actuatorId +'",\n'+
                                                    '"content": slideEvt.value.newValue\n'+
                                                    '}\n'+
                                                    'if(actionLoggerReady)\n'+
                                                    'actionLogger.logChange(logObject);\n'+
                                                    'var actuatorRequest = {\n'+
                                                    'authToken: \'skfjs343kjKJ\',\n'+
                                                    'method: \'sendActuatorData\',\n'+
                                                    'accessRole: \'controller\',\n'+
                                                    'actuatorId: \''+ actuator.actuatorId +'\',\n'+
                                                    'valueNames: "",\n'+
                                                    'data: \'\'+slideEvt.value.newValue\n'+
                                                    '};\n'+
                                                    'var jsonRequest = JSON.stringify(actuatorRequest);\n'+
                                                    'if(connected)\n'+
                                                    'ws.send(jsonRequest);\n'+
                                                    '});\n\n';
                                            }
                                });
                                
                                slidersArray = slidersArray.substring(0, slidersArray.length-1) + '];\n';
                                body+= '<p></p><br>\n';
                                ws.send(JSON.stringify({ method: 'getSensorMetadata'}));
                            } else {
                                if (msg.method == "getExperiments") {
                                    experiments = msg.experiments;
                                    $.each(msg.experiments, function(index,experiment) {
                                        var checkbox = document.createElement('input');
                                        checkbox.type = "checkbox";
                                        checkbox.id = experiment.experimentId;
                                        checkbox.value = experiment.experimentId;
                                        checkboxes.push(checkbox);

                                        var label = document.createElement('label');
                                        label.htmlFor = experiment.experimentId;
                                        label.appendChild(document.createTextNode(experiment.fullName + " : " + experiment.description));
                                        $("#experimentsDiv").append(checkbox);
                                        $("#experimentsDiv").append("  ");
                                        $("#experimentsDiv").append(label);
                                        $("#experimentsDiv").append("<br>");
                                    });
                                }
                            }
                        }
                    } catch(e) {
                        console.log(e);
                    }
                };

                scriptHeader = '<script>\n'+
                    'head.ready(function () {\n'+
                    'gadgets.window.adjustHeight(); \n'+
                    'var ip = "'+ ip +'";\n'+
                    'var port = "'+ port +'";\n'+
                    'var connected = 0;\n'+
                    'var sensorRequest;\n'+
                    'var ws = new WebSocket("ws://" + ip + ":" + port);\n'+
                    'var initialMetadata = {\n'+
                    '"id": "2e90ab41-2893-42ca-9169-b2dcd10285a6",\n'+
                    '"published": "2016-08-22T13:09:28.395Z",\n'+
                    '"storageType": "vault",\n'+
                    '"storageId": "",\n'+
                    '"actor": {\n'+
                    '"objectType": "person",\n'+
                    '"id": "id",\n'+
                    '"displayName": "name"\n'+
                    '},\n'+
                    '"target": {\n'+
                    '"objectType": "lab experiment",\n'+
                    '"id": "unknown",\n'+
                    '"displayName": "unknown"\n'+
                    '},\n'+
                    '"generator": {\n'+
                    '"objectType": "application",\n'+
                    '"url": "generator url",\n'+
                    '"id": "generator id",\n'+
                    '"displayName": "display name"\n'+
                    '},\n'+
                    '"provider": {\n'+
                    '"objectType": "ils",\n'+
                    '"url": "provider url",\n'+
                    '"id": "provider id",\n'+
                    '"displayName": "provider display name",\n'+
                    '"inquiryPhase": "Investigation"\n'+
                    '}\n'+
                    '};\n'+
                    '\n'+
                    'var actionLogger;\n'+
                    'var actionLoggerReady = 0;\n'+
                    'new window.golab.ils.metadata.GoLabMetadataHandler(initialMetadata, function(shouldBeNull,metadataHandler) {\n'+
                    'actionLogger = new window.ut.commons.actionlogging.ActionLogger(metadataHandler);\n'+
                    'actionLogger.setLoggingTarget("opensocial");\n'+
                    'actionLoggerReady =1 ;\n'+
                    '});\n';

                $('#generator').show();
            });

            $('#generator').click(function(){
                var numOptions = 0;
                $.each(checkboxes, function(index,checkbox){
                    if (checkbox.checked)
                        numOptions++;
                });
                if (numOptions > 1) {
                    oneOptionOnlyFlag = 0;
                }
                if (numOptions == 0){
                    alert ("Please select at least one experiment");
                } else {
                    var firstOne = 1;
                    $.each(experiments, function (index, experiment){
                        var experimentSelected = 0;
                        $.each(checkboxes, function (index2, checkbox){
                            if (checkbox.value == experiment.experimentId)
                                if (checkbox.checked)
                                    experimentSelected = 1;
                        });
                        if (experimentSelected) {
                            if (!oneOptionOnlyFlag) {
                                body += '<label class="radio-inline"><input type="radio" name="optradio" value="'+experiment.experimentId+ (firstOne?'" checked="true"':'"') + ' id="' + experiment.experimentId + '"><h4>'+experiment.fullName+'</h4></label>\n';
                            }
                            if (firstOne) {
                                initialOption = 'var initialOption = "' + experiment.experimentId + '";\nshowHideElements(initialOption);\n';
                                firstOne = 0;
                            }
                            configurationArray += 'configurationArray["'+experiment.experimentId+'"] = [ ';
                            $.each (experiment.actuators, function (actuatorIndex, actuator){
                                configurationArray += '"'+ actuator.actuatorId + '",';
                                if (!(allSensorsActuators.indexOf(actuator.actuatorId) > -1))
                                    allSensorsActuators.push(actuator.actuatorId);
                            });
                            $.each (experiment.sensors, function (sensorIndex, sensor){
                                configurationArray += '"'+ sensor.sensorId + '",';
                                if (!(allSensorsActuators.indexOf(sensor.sensorId) > -1))
                                    allSensorsActuators.push(sensor.sensorId);
                            });
                            configurationArray = configurationArray.substring(0, configurationArray.length - 1) + '];\n';
                        }
                    });

                    if (!oneOptionOnlyFlag)
                        body += '<p></p><br>\n';
                    ws.send(JSON.stringify({ method: 'getActuatorMetadata'}));
                }
            });
            createGadget = function() {
                    //this method is called whenever the sensor metadata is obtained
                    var allSensorsActuatorsString = 'var allSensorsActuatorsArray = [ ';
                    $.each(allSensorsActuators, function(index, element){
                        allSensorsActuatorsString += '"'+ element + '",';
                    });
                    allSensorsActuatorsString = allSensorsActuatorsString.substring(0, allSensorsActuatorsString.length-1)+'];\n';
                    
                    var optChoice = "";
                    if (!oneOptionOnlyFlag) {
                        optChoice += "$('input[type=radio][name=optradio]').change(function() {\n"+
                            "var chosenOption = $('input[name=optradio]:checked').val();\n"+
                            'var logObject = {\n'+
                            '"objectType": "radioButton",\n'+
                            '"displayName": chosenOption\n'+
                            '}\n'+
                            'if (actionLoggerReady)\n'+
                            'actionLogger.logAccess(logObject);\n'+
                            'showHideElements(chosenOption);\n'+
                            '});\n';
                    }

                    var gadget = header + body + scriptHeader + showHideElements + actuators + configurationArray + allSensorsActuatorsString + slidersArray + initialOption + optChoice + onOpen + booleanArray + onMessage + tail;
                    
                    var blob = new Blob([gadget], {type: 'text/plain;charset=utf-8'});
                    saveAs(blob, 'gadget.xml');
                    oneOptionOnlyFlag = 1;
                    body = '<body>\n';
                    actuators = '';
                    onOpen = 'ws.onopen = function() { \n connected = 1; \n';
                    booleanArray = 'var booleanArray = [ ';
                    allSensorsActuators = [];
                    configurationArray = 'var configurationArray = [];\n';
                    slidersArray = 'var slidersArray = [ ';
                    initialOption;
                };
                var header = '<?xml version="1.0" encoding="UTF-8" ?>\n'+
                    '<Module>\n'+
                    '<ModulePrefs>\n'+
                    '<Require feature="opensocial-0.9"/>\n'+
                    '<Require feature="osapi"/>\n'+
                    '<Require feature="dynamic-height"/>\n'+
                    '</ModulePrefs>\n'+
                    '<Content type="html">\n'+
                    '<![CDATA[\n'+
                    '<html lang="en">\n'+
                    '<head>\n'+
                    '<meta charset="UTF-8">\n'+
                    '<title>Add title here</title>\n'+
                    '<script type="text/javascript" src="https://code.jquery.com/jquery-1.7.2.js"></sc'+'ript>\n'+
                    '<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>\n'+
                    '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/9.2.0/css/bootstrap-slider.css">\n'+
                    '\n'+
                    '<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/headjs/1.0.3/head.min.js"></scri'+'pt>\n'+
                    '<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"></scr'+'ipt>\n'+
                    '<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/9.2.0/bootstrap-slider.js"></scr'+'ipt>\n'+
                    '<script type="text/javascript" src="http://shindig2.epfl.ch/ils/main/ils_graaspeu.js"></scri'+'pt>\n'+
                    '<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js"></scri'+'pt>\n'+
                    '<script type="text/javascript" src="https://raw.githubusercontent.com/go-lab/ils/master/metadata/MetadataHandler.js"></scri'+'pt>\n'+
                    '<script type="text/javascript" src="https://raw.githubusercontent.com/go-lab/ils/master/applog/ActionLogger.js"></scri'+'pt>\n'+
                    '<style>\n'+
                    'body {\n'+
                    'font-size: 16px;\n'+
                    'line-height: 1.42857143;\n'+
                    'color: #ffffff;\n'+
                    'background-color: #5050d2;\n'+
                    'font-family:arial,sans-serif;\n'+
                    'margin-top:40px;\n'+
                    'margin-bottom:20px;\n'+
                    'padding-left: 50px;\n'+
                    'padding-right: 50px;\n'+
                    'color: white;\n'+
                    '}\n'+
                    '.led-green-off {\n'+
                    'width: 24px;\n'+
                    'height: 24px;\n'+
                    'background-color: white;\n'+
                    'border-radius: 50%;\n'+
                    'box-shadow: rgba(0, 0, 0, 0.1) 0 -1px 7px 1px, inset #006 0 -1px 9px;\n'+
                    '}\n'+
                    '.btn {\n'+
                    'background-color: white;\n'+
                    'color: black;\n'+
                    '}\n'+
                    '.button-on {\n'+
                    'background-color: #6262FF;\n'+
                    '}\n'+
                    'h4 { \n'+
                    'margin-top: 5px;\n'+
                    'margin-bottom: 0px;\n'+
                    'font-size: 16px;\n'+
                    '}\n'+
                    '</style>\n'+
                    '</head>\n';

                var onMessage = 'ws.onmessage = function(event) {\n'+
                    'var data = event.data;\n'+
                    'var msg;\n'+
                    'try {\n'+
                    'msg = JSON.parse(data);\n'+
                    'if (msg.method == "getSensorData") {\n'+
                    'if (msg.responseData) {\n'+
                    'if (booleanArray.indexOf(msg.sensorId) > (-1)) {\n'+
                    'if (msg.responseData.data[0]){\n'+
                    '$("#"+msg.sensorId).css("background-color", "#228B22");\n'+
                    '} else {\n'+
                    '$("#"+msg.sensorId).css("background-color", "white");\n'+
                    '}\n'+
                    '} else {\n'+
                    '$("#"+msg.sensorId).html(msg.responseData.data[0]);\n'+
                    '}\n'+
                    '}\n'+
                    '}\n'+
                    '} catch(e) {\n'+
                    'console.log(e);\n'+
                    '}\n'+
                    '};\n';

                var showHideElements = 'var showHideElements = function (chosenOption) {\n'+
                    '$.each(allSensorsActuatorsArray, function(index, element) {\n'+
                    'if (configurationArray[chosenOption].indexOf(element)>(-1)) {\n'+
                    'if(slidersArray.indexOf(element)>(-1)){\n'+
                    '$("#"+element).parent().show();\n'+
                    '} else {\n'+
                    '$("#"+element).show();\n'+
                    '$("#span"+element).show();\n'+
                    '}\n'+
                    '}\n'+
                    'else {\n'+
                    'if(slidersArray.indexOf(element)>(-1)){\n'+
                    '$("#"+element).parent().hide();\n'+
                    '} else {\n'+
                    '$("#"+element).hide();\n'+
                    '$("#span"+element).hide();\n'+
                    '}\n'+
                    '}\n'+
                    '});\n'+
                    '}\n';

                var tail = '});\n'+
                    '</scri'+'pt>\n'+
                    '</body>\n'+
                    '</html>\n'+
                    ']'+']>\n'+
                    '</'+'Content>\n'+
                    '</'+'Module>\n';

      });
    </script>
</body>
</html>
]]>
</Content>
</Module>