<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="File Drop"
                author_email="na.li@epfl.ch"
                author="Na Li"
                description="This widget allows users to drag and drop files into a space. It also displays a list of existing resources in the space. It currently only works in Graasp.">
    <Require feature="osapi" />
    <Require feature="dynamic-height" />
  </ModulePrefs>
  <Content type="html" view="default,canvas,home,profile"><![CDATA[
<link rel="stylesheet" href="http://graasp.epfl.ch/gadget/libs/dropzone/css/dropzone.css" type="text/css">
<link rel="stylesheet" href="http://graasp.epfl.ch/gadget/libs/bootstrap/css/bootstrap.min.css" type="text/css">

<!-- Style  configuration -->
<style type="text/css">
  body{background-color:transparent;font-family: "Helvetica Neue", arial, sans-serif;font-size: 13px;}
  .gadgets-gadget{width: 100%;}
  .content {
    margin-top: 5px;
    font-size: 12px;
    text-indent:10px;
  }
  #container {
    background-color:white;
    border-radius:5px;
    padding:5px;
  }
  .doc_list {
    margin-left: 5px;
  }
  .list_title {
    font-size: 16px;
    text-indent: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    position: relative;
    font-weight: bold;
  }
  .msg {
    margin-left: 10px;
    font-size: 14px;
    margin-bottom: 5px;
  }
  a {
    color: #000000;
  }
  a:visited {
    color: #000000;
  }
</style>

<div id="container">
  <form method="post" action="/" class="dropzone" id="file-dropzone" enctype = "multipart/form-data">
    <input id="request" type="hidden" name="request"></input>
  </form>
  <div class="list_title">Resources in the space</div>
  <table class="table table-hover doc_list"><tbody id="list"></tbody></table>
  <div id = "msg" class="msg"><div>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
<script type="text/javascript" src="http://open-app.googlecode.com/files/openapp.js"></script>
<!-- The dropzone.min.js library has been updated -->
<script type="text/javascript" src="http://graasp.epfl.ch/gadget/libs/dropzone/dropzone.min.js"></script>
<!-- The ILS library has been included to work with the ILS and the VAULT space -->
<script type="text/javascript" src="http://graasp.epfl.ch/ils_lib/main/ils.js"></script>


<script type="text/javascript">
var app = {};
var isOwner = false;
var parentSpaceId = null;

function getQueryVariable(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
    console.log('Query variable %s not found', variable);
}

// Bind listener to dropzone, and upload the dropped file
function dropListener(){
  Dropzone.options.fileDropzone = {
    init: function() {

      this.on("addedfile", function(file) { 
        var filename = file.name;
        var file_type = file.type;
        var action = "/rpc?method=documents.create&id=documents.create"
        action = action + "&st=" + getQueryVariable("st")
        this.options.url = action;   
    
        var request={"method":"documents.create",
          "params": {
            "document": {
              "displayName": filename,
                "parentId": parentSpaceId,
              "mimeType": file_type,
              "fileName": filename
            }
          },
          "id":"documents.create"
        }

        // add request payload to the form
        $('#request').val(JSON.stringify(request));
      });

      this.on("success", function(file, response) {
        if (response.result.entry != null) {
          buildItem(response.result.entry);
          $('#msg').text("");
          adjustHeight();
        }
      });
    }
  };
}

// gets the data and calls build for container
var initialize = function() {
    app.list = $("#list");
    ils.getIls(function(response) {

      if (response !=null && response != undefined && response.error == undefined) {
        ils.getVault(function(vault) {
          if (vault !=null && vault != undefined) { //The space is an ILS and there is a VAULT folder
            // The resource will be retrieved from / store in VAULT
            parentSpaceId = vault.id;
            ils.listVault(function(resourceList) {
              build(resourceList);
            });
          } else { //The space is an ILS and there is no VAULT folder
            // The resource will be retrieved from/stored in the current space
           osapi.context.get().execute(function(space){
             parentSpaceId = space.contextId
             osapi.documents.get({contextId: space.contextId, contextType: space.contextType}).execute(function(spaceResources){
               build(spaceResources.list);
             });
           });
          }
        });
      }else{ // The space is not an ILS            
        // Currently developed in the same way than an ILS without VAULT folder
        // TODO: It should be adapted once we decide how to deal with the VAULT spaces in the new GRASP
        osapi.context.get().execute(function(space){
          parentSpaceId = space.contextId
          osapi.documents.get({contextId: space.contextId, contextType: space.contextType}).execute(function(spaceResources){
            build(spaceResources.list);
          });
        });
      }

    });

  
  dropListener();
  gadgets.window.adjustHeight();
};

var adjustHeight = function() {
  gadgets.window.adjustHeight();
}

// build the container with gadgets
var build = function(documents) {
  console.log(documents);
  if (documents.length >0) {
    for (var i = 0; i < documents.length; i++) {
     var doc = documents[i];
     buildItem(doc);
    }
  }else{
      $('#msg').text("No resources were found in this space!");
  }

  // resize the gadget
  gadgets.window.adjustHeight();

  // 2 seconds
  setTimeout(adjustHeight,2000);
  // 5 seconds
  setTimeout(adjustHeight,5000);
};

buildItem = function (doc) {
  var doc_id = 'document_'+doc.id;
  var doc_el = $("<tr id='"+doc_id+"'></tr>");

  var doc_name = $('<td id="doc_name"></td>');
  var download_link = $("<a target='_blank'></a>");
  if (doc.attachment != null) {
    var downloadUrl = doc.attachment.url;
    download_link.attr("href",downloadUrl);
    
  }
  download_link.text(doc.displayName);
  doc_name.append(download_link);
  doc_el.append(doc_name);

  var update_time = $('<td id = "update_time"></td>');
  update_time.text(doc.updated.replace("T"," ").replace(/.....$/,""));
  doc_el.append(update_time);

  app.list.prepend(doc_el);
}
</script>

<script type="text/javascript">
gadgets.util.registerOnLoadHandler(initialize);
</script>


  ]]></Content>
</Module>