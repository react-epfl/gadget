<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="File Drop"
                author_email="na.li@epfl.ch"
                author="Na Li"
                description="This widget allows users to drag and drop files into a space. It currently only works in Graasp.">
    <Require feature="osapi" />
    <Require feature="dynamic-height" />
  </ModulePrefs>
  <Content type="html" view="default,canvas,home,profile"><![CDATA[
<link rel="stylesheet" href="http://graasp.epfl.ch/gadget/libs/dropzone/css/dropzone.css" type="text/css">
<style type="text/css">
  body{background-color:transparent;font-family: "Helvetica Neue", arial, sans-serif;font-size:15px;overflow: hidden;} // les ressources 
  .doc {
    margin: 5px 5px;
    background-color: #EEE;
    border-top: 1px solid #AAA;
    position: relative;
    min-height: 20px;
	position: relative;
    }
  .gadgets-gadget{width: 100%;}
  .title {margin: 5px 5px; color: #333; text-indent: 1px;
    background-color: #EEE;
    border-top: 1px solid #AAA; 
    padding: 1px 1px;
  }
  .gadget-title {
  font-size: 16px;
    text-indent: 5px;
    padding-top: 5px;
    position: relative;
    display: inline-block;
  }
  .content {
    margin-top:5px;
    font-size:12px;
    text-indent:10px;
  }
  #container {
    background-color:white;
    border-radius:20px;
    padding:50px;
  }
  .preview_button {
    display: inline-block;
    margin: 5px;
  }
  thumbnail {
    display: inline-block;
    color: #333; 
    background-color: #EEE;
    margin: 2px 5px;
    width: 30px;
    padding: 5px;
    position: absolute;
    left: 0;
  }

 
</style> 
 
 <form method="post" action="/" class="dropzone" id="file-dropzone" enctype = "multipart/form-data">
  <input id="request" type="hidden" name="request"></input>
  </form>
  <div style="font-size:16px;text-indent:10px;padding-top:5px;position:relative;">Resources existing in this space</div>
  <div id="list"></div>
<div id="container"></div>
<script type="text/javascript" src="http://d2hv4ldeur9lfv.cloudfront.net/opensocial-jquery-1.3.2.5.min.js"></script>
<!-- <script type="text/javascript" src="http://graasp.epfl.ch/gadgets/js/shindig-container:rpc.js?c=1&debug=1&nocache=1"></script> -->
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
<script type="text/javascript" src="http://open-app.googlecode.com/files/openapp.js"></script>
<script type="text/javascript" src="http://graasp.epfl.ch/gadget/libs/dropzone/dropzone.min.js"></script>


<script type="text/javascript">
var app = {containerUrl: "", contextId: "", showingPreview: false,rootUrl: "http://graasp.epfl.ch/gadget/prod/res_download/"}
var isOwner = false;
var parentSpaceId = null;
var dwd = false;

function getQueryVariable(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
        return decodeURIComponent(pair[1]);
		}
	}
	console.log('Query variable %s not found', variable);
	}
// Bind listener to dropzone, and upload the dropped file
function dropListener(){ 
  Dropzone.options.fileDropzone = {
    init: function() {
	this.on("addedfile", function(file) {
        var filename = file.name;
        var action = "/rpc?method=documents.create&id=documents.create"
		
        action = action + "&st=" + getQueryVariable("st")
	   this.options.url = action;
		var request={"method":"documents.create",
          "params": {
            "document": {
              "displayName": filename,
              "parentId": parentSpaceId,
              "mimeType":"image/png",
              "fileName": filename
			}
          },
          "id":"documents.create"
        }
        // add request payload to the form
        $('#request').val(JSON.stringify(request));
	dwd = true; }
	)  	 } 
   };
   dwd = false;
  }
	// gets the data and calls build for container
var initialize = function() {
  app.list = $("#list")
  osapi.context.get().execute(function(response){
    parentSpaceId = response.contextId
	 app.containerUrl = response.containerUrl;
    app.contextId = response.contextId;
    osapi.documents.get({contextId: response.contextId, contextType: response.contextType}).execute(function(response){
	//console.log(response);
	 build(response.list);
	  });
  });
  dropListener(); };


var adjustHeight = function() {
  gadgets.window.adjustHeight();
  if (dwd == true) {
  dwd = false ;
  //refresh the page automatically
window.location.reload() 
}  
}
  //Shows or hides previews. By default previews are not showed. 
var changePreviewMode = function() {
    app.showingPreview = !app.showingPreview;
	initialize();
}
// Checks if the document is a webpage Bookmark
 var isBookmark = function(doc) { 
  var isBookmark = false;
  if (typeof doc.documentEntity !== "undefined") {
    var docEntity = doc.documentEntity;
    var firstSeven = docEntity.substring(0,7);
    if (firstSeven === "http://") {
      isBookmark = true;
    }
  }
  return isBookmark;
}
// build the container with gadgets
var build = function(documents){
 var container = $('#container');
  container.empty();
  var header = $("<div id='gadget_header'></div>");
  var title = $("<div class='gadget-title'></div>");
  //console.log(documents)

  //the preview button
 var preview = $("<div class='preview_button' id='preview_button'></div>");
  var button_text = "Show previews";
  
  if (app.showingPreview == true) {
    button_text = "Hide previews";
  }
  
  var preview_button = $("<button type='button' onclick='changePreviewMode()'>"+button_text+"</button>");
  preview.append(preview_button);
  header.append(preview);
  
  if(documents.length == 0){
  app.list.text("No resources were found in this space!");
  }
   
   container.append(header);

	 
 for (var i = 0; i < documents.length; i++) {
    var doc = documents[i];
	var doc_el = $("<div id='"+doc_id+"'></div>");
	var doc_id = 'document_'+doc.id;
    doc_el.attr('class','doc');
	
	//thumbnail
    var thumb_id = 'asset_' + doc.objectId + '_thumb_image';
    var thumb_el = $("<div class='thumbnail'></div>");
    var thumbnail = $("<img id='"+thumb_id+"' src='"+doc.thumbnailUrl+"' style='width: 28px; height: 36px;'>");
    thumb_el.append(thumbnail);
    doc_el.append(thumb_el);
	
	//Showing the previews
    var doc_body = $('<div class="content"></div>');
   if (app.showingPreview == true) {
      var preview_el = $("<div class='preview'></div>");
	  //show embedded documents 
      if (typeof doc.documentEntity !== "undefined") {
        if (!isBookmark(doc)) {
          doc_body.html(doc.documentEntity);
        } else {
		var site_preview_url = app.containerUrl + "/item4a/picture/full/asset/" + doc.id;
        var preview_img = $("<img alt='Resource Preview' src='"+ site_preview_url +"' width='63%'></img>");
          preview_el.append(preview_img);
          doc_body.append(preview_el);
        }
      } 
      // show a preview of the attachment
      if (typeof doc.attachment !== "undefined") {
        var preview_path = app.containerUrl + "/attachment/" + doc.attachment.objectId;
        var preview_img = $("<img alt='Resource Preview' src='"+ preview_path +"' width='63%'></img>");
        preview_el.append(preview_img);
        doc_body.append(preview_el);
      }
	  }
   doc_el.append(doc_body);
    container.append(doc_el);
  }
   // resize the gadget
    gadgets.window.adjustHeight();
  // 2 seconds
  
  setTimeout(adjustHeight,2000);
  // 5 seconds
  setTimeout(adjustHeight,5000);
};


</script>
<script type="text/javascript">
gadgets.util.registerOnLoadHandler(initialize);
</script>
 


 ]]></Content>
</Module>