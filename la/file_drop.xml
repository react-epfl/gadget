<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="File Drop"
                author_email="na.li@epfl.ch"
                author="Na Li"
                description="This widget allows users to drag and drop files into a space. It currently only works in Graasp.">
    <Require feature="osapi" />
    <Require feature="dynamic-height" />
  </ModulePrefs>
  <Content type="html" view="default,canvas,home,profile"><![CDATA[
<link rel="stylesheet" href="http://graasp.epfl.ch/gadget/libs/dropzone/css/dropzone.css" type="text/css">

<style type="text/css">
  body{background-color:transparent;font-family: "Helvetica Neue", arial, sans-serif;font-size: 13px;}
  .gadgets-gadget{width: 100%;}
  .doc {margin: 5px 0px;position:relative;}
  .title {margin: 5px 0px; color: #333; text-indent: 10px;
    background-color: #EEE;
    border-top: 1px solid #AAA;
    padding: 1px 3px;
  }
  .content {
    margin-top: 5px;
    font-size: 12px;
    text-indent:10px;
  }
  #container {
    background-color:white;
    border-radius:5px;
    padding:5px;
  }
  .desc{
    margin-left:10px;
  }
</style>

<div id="container">
  <form method="post" action="/" class="dropzone" id="file-dropzone" enctype = "multipart/form-data">
    <input id="request" type="hidden" name="request"></input>
  </form>
  <div style="font-size:16px;text-indent:10px;padding-top:5px;position:relative;">Resources existing in a space</div>
  <div id="list"></div>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
<script type="text/javascript" src="http://open-app.googlecode.com/files/openapp.js"></script>
<script type="text/javascript" src="http://graasp.epfl.ch/gadget/libs/dropzone/dropzone.min.js"></script>

<script type="text/javascript">
var app = {}
var isOwner = false;
var parentSpaceId = null;

function getQueryVariable(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
    console.log('Query variable %s not found', variable);
}

var completeUpload = function (res) {
  $("#upload").val("Upload").attr("disabled",false)
  res = res.replace(/<\/?[^>]+>/gi, '') // strip html tags
  res = eval("(" + res + ")"); //turn text into json object

  buildItem(res.result.entry)
  adjustHeight()
}

// Bind listener to dropzone, and upload the dropped file
function dropListener(){
  Dropzone.options.fileDropzone = {
    init: function() {
      this.on("addedfile", function(file) { 
        var filename = file.name;
        var action = "/rpc?method=documents.create&id=documents.create"
        action = action + "&st=" + getQueryVariable("st")
        this.options.url = action;
        var request={"method":"documents.create",
          "params": {
            "document": {
              "displayName": filename,
              "parentId": parentSpaceId,
              "mimeType":"image/png",
              "fileName": filename
            }
          },
          "id":"documents.create"
        }
        // add request payload to the form
        $('#request').val(JSON.stringify(request));
      });
    }
  };
}

// gets the data and calls build for container
var initialize = function() {
  app.list = $("#list")
  osapi.context.get().execute(function(response){
    parentSpaceId = response.contextId
    osapi.documents.get({contextId: response.contextId, contextType: response.contextType}).execute(function(response){
      build(response.list);
    });
  });
  dropListener();
  gadgets.window.adjustHeight();
};

var adjustHeight = function() {
  gadgets.window.adjustHeight();
}

// build the container with gadgets
var build = function(documents){
  console.log(documents)

  if(documents.length == 0){
    app.list.text("No resources were found in this space!");
  }

  for (var i = 0; i < documents.length; i++) {
    var doc = documents[i];
    buildItem(doc)
  }

  // resize the gadget
  gadgets.window.adjustHeight();

  // 2 seconds
  setTimeout(adjustHeight,2000);
  // 5 seconds
  setTimeout(adjustHeight,5000);
};

buildItem = function (doc) {
  var mimetype = "application/png";

  var doc_id = 'document_'+doc.id;
  var doc_el = $("<div id='"+doc_id+"'></div>");
  doc_el.attr('class','doc');

  var doc_name = $('<div class="title"></div>');
  doc_name.text(doc.displayName);
  doc_name.append(" - " + doc.updated.replace("T"," ").replace(/.....$/,""))
  doc_el.append(doc_name)

  // send button
  var choose = $("<button type='button'>Select</button>");
  choose.click(closure(doc.id,mimetype))
  doc_el.append(choose)

  app.list.prepend(doc_el);
}

var closure = function(par1,par2) {
  var tmp1 = par1;
  var tmp2 = par2;
  return function(i){
    sendId(tmp1,tmp2);
  }
}

function sendId(id,mimetype) {
  // send data to openapp
  gadgets.openapp.publish({
    event: "select",
    type: "json",
    message: {
      id: id,
      mimetype: mimetype
    }
  });
}

</script>

<script type="text/javascript">
gadgets.util.registerOnLoadHandler(initialize);
</script>


  ]]></Content>
</Module>